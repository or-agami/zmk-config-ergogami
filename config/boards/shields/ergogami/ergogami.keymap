/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
  tapping-term-ms = <400>;
};
&sk {
  release-after-ms = <2000>;
  quick-release;
};
 
/* Layers */
#define QWERTY 0
#define ISRT 1
#define NUM 2
#define SYM 3
#define NAV 4
#define SYS 5
#define BT 6
/ {

  combos {
    compatible = "zmk,combos";
    combo_qwerty {
      timeout-ms = <30>;
      key-positions = <10 11 12 13>;
      bindings = <&to QWERTY>;
    };
    combo_nav {
      timeout-ms = <30>;
      key-positions = <1 2>;
      bindings = <&tog NAV>;
    };
    combo_sys {
      timeout-ms = <30>;
      key-positions = <21 22 23>;
      bindings = <&to SYS>;
    };
    combo_caps {
      timeout-ms = <30>;
      key-positions = <16 17 18>;
      bindings = <&caps_word>;
    };
    combo_bt  {
      timeout-ms = <30>;
      key-positions = <27 28 29>;
      bindings = <&to BT>;
    };
    combo_lalt {
      timeout-ms = <20>;
      key-positions = <10 11>;
      bindings = <&kp LALT>; 
      layers = <SYS>; 
    };
    combo_enter {
      timeout-ms = <30>;
      key-positions = <16 17>;
      bindings = <&kp RET>; 
    };
  };

  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
    sr: shift_layer {
      compatible = "zmk,behavior-hold-tap";
      label = "SHIFT_LAYER";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&to>;
      retro-tap;
    };
    st: shift_key {
      compatible = "zmk,behavior-hold-tap";
      label = "SHIFT_KEY";
      #binding-cells = <2>;
      tapping-term-ms = <180>;
      quick_tap_ms = <0>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
      retro-tap;
    };
    hl: homerow_layers {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_LAYERS";
      #binding-cells = <2>;
      tapping-term-ms = <220>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&sl>, <&kp>;
    };
    td: tapdance {
      compatible = "zmk,behavior-hold-tap";
      label = "TAPDANCE";
      #binding-cells = <2>;
      tapping-term-ms = <190>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };
  
//		Keys Template
//              -------------------------------------------------------------------------------------------------------------------------
//             |  RC(0,0)   |  RC(0,1)   |  RC(0,2)   |  RC(0,3)   |  RC(0,4)   |         |  RC(0,5)   |  RC(0,6)   |  RC(0,7)   |  RC(0,8)   |  RC(0,9)   |
//             |  RC(0,10)  |  RC(0,11)  |  RC(0,12)  |  RC(0,13)  |  RC(0,14)  |         |  RC(0,15)  |  RC(0,16)  |  RC(0,17)  |  RC(0,18)  |  RC(0,19)  |
//             |  RC(0,20)  |  RC(0,21)  |  RC(0,22)  |  RC(0,23)  |  RC(0,24)  |         |  RC(0,25)  |  RC(0,26)  |  RC(0,27)  |  RC(0,28)  |  RC(0,29)  |
//                                                                 |  RC(0,30)  |         |  RC(0,31)  |

  keymap {
    compatible = "zmk,keymap";
    qwerty {
      label = "QWERTY";
      bindings = <
   // ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────────╮
        &kp Q         &kp W         &kp E         &kp R         &kp T               &kp Y         &kp U         &kp I         &kp O         &kp P
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤
        &td LCTRL A   &kp S         &kp D         &st LSHFT F   &kp G               &kp H         &td RSHFT J   &kp K         &kp L         &kp SEMI
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤
        &kp Z         &kp X         &kp C         &kp V         &kp B               &kp N         &kp M         &kp COMMA     &kp DOT       &td ALT SLASH
   // ╰─────────────┴─────────────┴─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴───────────────╯
                                                                &lt NUM SPACE       &kp BSPC
   //                                                         ╰───────────────╯   ╰─────────────╯
      >;
    };
    isrt {
      label = "ISRT";
      bindings = <
   // ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp Y         &kp C         &kp L         &kp M         &kp K               &kp Z         &kp F         &kp U         &kp COMMA     &kp SQT
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp I         &kp S         &kp R         &st LSHFT T   &kp G               &kp P         &st RSHFT N   &kp E         &kp A         &kp O
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Q         &kp V         &kp W         &kp D         &kp J               &kp B         &kp H         &kp FSLH      &kp DOT       &kp X
   // ╰─────────────┴─────────────┴─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                                &lt NUM SPACE       &kp BSPC
   //                                                         ╰───────────────╯   ╰─────────────╯
      >;
    };

    num {
      label = "NUM";
      bindings = <
   // ╭─────────────┬─────────────┬─────────────┬──────────────┬───────────────╮   ╭─────────────────┬─────────────┬─────────────┬─────────────┬──────────────╮
        &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_VOL_DN   &kp C_VOL_UP        &kp KP_DIVIDE     &kp N7        &kp N8        &kp N9        &kp KP_MINUS
   // ├─────────────┼─────────────┼─────────────┼──────────────┼───────────────┤   ├─────────────────┼─────────────┼─────────────┼─────────────┼──────────────┤
        &kp TAB       &kp S         &kp D         &st LSHFT F    &to NUM             &kp KP_MULTIPLY   &kp N4        &kp N5        &kp N6        &kp KP_PLUS
   // ├─────────────┼─────────────┼─────────────┼──────────────┼───────────────┤   ├─────────────────┼─────────────┼─────────────┼─────────────┼──────────────┤
        &kp Z         &kp X         &kp C         &kp V          &kp B               &kp N0            &kp N1        &kp N2        &kp N3        &kp RET
   // ╰─────────────┴─────────────┴─────────────┼──────────────┼───────────────┤   ├─────────────────┼─────────────┼─────────────┴─────────────┴──────────────╯
                                                                 &lt NUM SPACE       &kp BSPC
   //                                                          ╰───────────────╯   ╰─────────────────╯
      >;
    };

    sym {
      label = "SYM";
      bindings = <
   // ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────────╮   ╭─────────────┬───────────────┬─────────────┬─────────────┬───────────────╮
        &kp GRAVE     &kp W         &kp E         &kp R         &kp T               &kp Y         &kp U           &kp I         &kp LPAR      &kp RPAR
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼───────────────┼─────────────┼─────────────┼───────────────┤
        &td LCTRL A   &kp S         &kp D         &st LSHFT F   &kp G               &kp H         &td RSHFT SQT   &kp K         &kp LBKT      &kp RBKT
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼───────────────┼─────────────┼─────────────┼───────────────┤
        &kp Z         &td LGUI X    &kp C         &kp V         &kp B               &kp N         &kp M           &kp COMMA     &kp LT        &kp GT
   // ╰─────────────┴─────────────┴─────────────┼─────────────┼───────────────┤   ├─────────────┼───────────────┼─────────────┴─────────────┴───────────────╯
                                                                &lt NUM SPACE       &kp BSPC
   //                                                         ╰───────────────╯   ╰─────────────╯
      >;
    };
		
    nav {
      label = "NAV";
      bindings = <
   // ╭─────────────┬─────────────────┬─────────────┬─────────────┬───────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────────╮
        &kp Q         &kp LA(LS(TAB))   &kp LA(TAB)   &kp R         &kp T               &kp Y         &kp HOME         &kp UP         &kp END       &kp PG_UP
   // ├─────────────┼─────────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤
        &kp LCTRL     &kp LSHFT         &kp D         &st LSHFT F   &kp G               &kp H         &kp LEFT      &kp DOWN       &kp RIGHT     &kp PG_DN
   // ├─────────────┼─────────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤
        &kp Z         &kp X             &kp C         &kp V         &kp B               &kp DEL       &kp M         &kp COMMA      &kp DOT       &td ALT SLASH
   // ╰─────────────┴─────────────────┴─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴───────────────╯
                                                                    &lt NUM SPACE       &kp BSPC
   //                                                             ╰───────────────╯   ╰─────────────╯
      >;
    };

    sys {
      label = "SYS";
      bindings = <
   // ╭─────────────┬─────────────┬─────────────┬─────────────┬───────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &kp ESC       &kp W         &kp E         &kp R         &kp T               &kp Y         &kp U         &kp I         &kp O         &kp P
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &td LCTRL A   &kp S         &kp D         &st LSHFT F   &kp G               &kp H         &td RSHFT J   &kp K         &kp L         &kp SEMI
   // ├─────────────┼─────────────┼─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp Z         &kp X         &kp C         &kp V         &kp B               &kp N         &kp M         &kp COMMA     &kp DOT       &kp SLASH
   // ╰─────────────┴─────────────┴─────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                                &lt NUM SPACE       &kp BSPC
   //                                                         ╰───────────────╯   ╰─────────────╯
      >;
    };

    bt {
      label = "BT";
      bindings = <
   // ╭──────────────┬──────────────┬──────────────┬─────────────┬───────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
        &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &kp R         &kp T               &kp Y         &kp U         &kp I         &kp O         &kp P
   // ├──────────────┼──────────────┼──────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &kp A          &kp S          &kp D          &st LSHFT F   &kp G               &kp H         &st RSHFT J   &kp K         &kp L         &kp SEMI
   // ├──────────────┼──────────────┼──────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
        &out OUT_USB   &out OUT_BLE   &kp C          &kp V         &bt BT_CLR          &kp N         &kp M         &kp COMMA     &kp DOT       &kp SLASH
   // ╰──────────────┴──────────────┴──────────────┼─────────────┼───────────────┤   ├─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                                   &lt NUM SPACE       &kp BSPC
   //                                                            ╰───────────────╯   ╰─────────────╯
      >;
    };

  };
};
